server:
  port: 8082
spring:
  application:
    name: "rentals"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:postgresql://localhost:5432/rentalsdb
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    function:
      definition: bookAvailable;bookUnavailable
    stream:
      bindings:
        bookAvailable-in-0:
          destination: book-available
          group: ${spring.application.name}
        bookUnavailable-in-0:
          destination: book-unavailable
          group: ${spring.application.name}
        borrowBook-out-0:
          destination: borrow-book
        sendMessage-out-0:
          destination: send-message
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"



management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
